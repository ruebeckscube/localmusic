# Generated by Django 5.2 on 2025-05-11 17:05

import findshows.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('findshows', '0003_alter_artist_bio_alter_artist_listen_links_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='artist',
            name='bio',
            field=models.TextField(max_length=800, null=True),
        ),
        migrations.AlterField(
            model_name='artist',
            name='listen_links',
            field=models.TextField(help_text='\n        Supports Spotify, Bandcamp, and SoundCloud links. Please provide either one\n        album link or up to three song links on separate lines.\n\n        A preview player for all songs will be displayed on your artist page,\n        and the first track from the album or the first song link will be\n        displayed on concerts. ', max_length=400, null=True, validators=[findshows.models.MultiURLValidator('LSN', 3)]),
        ),
        migrations.AlterField(
            model_name='artist',
            name='profile_picture',
            field=models.ImageField(help_text='JPG/JPEG preferred, max file size 1MB. Profile pictures will be cropped to a circle.', null=True, upload_to=''),
        ),
        migrations.AlterField(
            model_name='artist',
            name='similar_musicbrainz_artists',
            field=models.ManyToManyField(help_text='Select 3 artists whose fans might also like to listen to this artist.', null=True, to='findshows.musicbrainzartist', verbose_name='Sounds like'),
        ),
        migrations.AlterField(
            model_name='artist',
            name='socials_links',
            field=models.JSONField(blank=True, default=list, help_text='Enter links to socials, website, etc.'),
        ),
        migrations.AlterField(
            model_name='artist',
            name='youtube_links',
            field=models.TextField(blank=True, help_text='(Optional) Enter up to two youtube links on separate lines.', max_length=300, null=True, validators=[findshows.models.MultiURLValidator('YT', 2)]),
        ),
    ]
