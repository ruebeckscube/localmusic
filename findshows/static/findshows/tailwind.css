/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-thin: 100;
    --font-weight-extralight: 200;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --leading-loose: 2;
    --radius-xl: 0.75rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-background: #F9F9ED;
    --color-sub-background: #ebe7eb;
    --color-clickable: #9719ea;
    --color-clickable-h: #ea19af;
    --color-highlight-item: #0b607a;
    --color-highlight-item-light: #b5d2d2;
    --color-highlight-text: #0b607a;
    --font-body: "LeagueMono";
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .\@container {
    container-type: inline-size;
  }
  .visible {
    visibility: visible;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1 {
    top: calc(var(--spacing) * 1);
  }
  .top-10 {
    top: calc(var(--spacing) * 10);
  }
  .right-1 {
    right: calc(var(--spacing) * 1);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .-z-0 {
    z-index: calc(0 * -1);
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-50 {
    z-index: 50;
  }
  .container {
    width: 100%;
    @media (width >= 1120px) {
      max-width: 1120px;
    }
    @media (width >= 30rem) {
      max-width: 30rem;
    }
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .m-1 {
    margin: calc(var(--spacing) * 1);
  }
  .m-2 {
    margin: calc(var(--spacing) * 2);
  }
  .m-4 {
    margin: calc(var(--spacing) * 4);
  }
  .m-5 {
    margin: calc(var(--spacing) * 5);
  }
  .m-8 {
    margin: calc(var(--spacing) * 8);
  }
  .m-auto {
    margin: auto;
  }
  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }
  .mx-3 {
    margin-inline: calc(var(--spacing) * 3);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-auto {
    margin-block: auto;
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-6 {
    margin-right: calc(var(--spacing) * 6);
  }
  .mr-auto {
    margin-right: auto;
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }
  .ml-auto {
    margin-left: auto;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .h-0\.5 {
    height: calc(var(--spacing) * 0.5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-60 {
    height: calc(var(--spacing) * 60);
  }
  .h-fit {
    height: fit-content;
  }
  .h-full {
    height: 100%;
  }
  .max-h-14 {
    max-height: calc(var(--spacing) * 14);
  }
  .max-h-20 {
    max-height: calc(var(--spacing) * 20);
  }
  .max-h-36 {
    max-height: calc(var(--spacing) * 36);
  }
  .max-h-52 {
    max-height: calc(var(--spacing) * 52);
  }
  .max-h-60 {
    max-height: calc(var(--spacing) * 60);
  }
  .max-h-\[30em\] {
    max-height: 30em;
  }
  .max-h-full {
    max-height: 100%;
  }
  .min-h-12 {
    min-height: calc(var(--spacing) * 12);
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-0\.5 {
    width: calc(var(--spacing) * 0.5);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-1\/3 {
    width: calc(1/3 * 100%);
  }
  .w-2\/3 {
    width: calc(2/3 * 100%);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-11\/12 {
    width: calc(11/12 * 100%);
  }
  .w-21 {
    width: calc(var(--spacing) * 21);
  }
  .w-30 {
    width: calc(var(--spacing) * 30);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-44 {
    width: calc(var(--spacing) * 44);
  }
  .w-50 {
    width: calc(var(--spacing) * 50);
  }
  .w-60 {
    width: calc(var(--spacing) * 60);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-30 {
    max-width: calc(var(--spacing) * 30);
  }
  .max-w-36 {
    max-width: calc(var(--spacing) * 36);
  }
  .max-w-48 {
    max-width: calc(var(--spacing) * 48);
  }
  .max-w-60 {
    max-width: calc(var(--spacing) * 60);
  }
  .max-w-80 {
    max-width: calc(var(--spacing) * 80);
  }
  .max-w-100 {
    max-width: calc(var(--spacing) * 100);
  }
  .max-w-\[50em\] {
    max-width: 50em;
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-30 {
    min-width: calc(var(--spacing) * 30);
  }
  .min-w-40 {
    min-width: calc(var(--spacing) * 40);
  }
  .min-w-44 {
    min-width: calc(var(--spacing) * 44);
  }
  .min-w-48 {
    min-width: calc(var(--spacing) * 48);
  }
  .min-w-60 {
    min-width: calc(var(--spacing) * 60);
  }
  .min-w-72 {
    min-width: calc(var(--spacing) * 72);
  }
  .flex-1 {
    flex: 1;
  }
  .flex-none {
    flex: none;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .grow {
    flex-grow: 1;
  }
  .basis-0 {
    flex-basis: calc(var(--spacing) * 0);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .grid-flow-row {
    grid-auto-flow: row;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-7 {
    grid-template-columns: repeat(7, minmax(0, 1fr));
  }
  .grid-rows-1 {
    grid-template-rows: repeat(1, minmax(0, 1fr));
  }
  .grid-rows-2 {
    grid-template-rows: repeat(2, minmax(0, 1fr));
  }
  .grid-rows-3 {
    grid-template-rows: repeat(3, minmax(0, 1fr));
  }
  .grid-rows-4 {
    grid-template-rows: repeat(4, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .content-center {
    align-content: center;
  }
  .items-center {
    align-items: center;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .space-x-5 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 5) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .self-center {
    align-self: center;
  }
  .self-end {
    align-self: flex-end;
  }
  .self-start {
    align-self: flex-start;
  }
  .overflow-auto {
    overflow: auto;
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }
  .border-6 {
    border-style: var(--tw-border-style);
    border-width: 6px;
  }
  .border-clickable {
    border-color: var(--color-clickable);
  }
  .border-highlight-item {
    border-color: var(--color-highlight-item);
  }
  .border-transparent {
    border-color: transparent;
  }
  .bg-background {
    background-color: var(--color-background);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-600\/40 {
    background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-600) 40%, transparent);
    }
  }
  .bg-highlight-item-light {
    background-color: var(--color-highlight-item-light);
  }
  .bg-sub-background {
    background-color: var(--color-sub-background);
  }
  .fill-current {
    fill: currentcolor;
  }
  .stroke-3 {
    stroke-width: 3;
  }
  .object-contain {
    object-fit: contain;
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-justify {
    text-align: justify;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .align-middle {
    vertical-align: middle;
  }
  .font-body {
    font-family: var(--font-body);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[6vw\] {
    font-size: 6vw;
  }
  .text-\[10vw\] {
    font-size: 10vw;
  }
  .leading-loose {
    --tw-leading: var(--leading-loose);
    line-height: var(--leading-loose);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-extralight {
    --tw-font-weight: var(--font-weight-extralight);
    font-weight: var(--font-weight-extralight);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .font-thin {
    --tw-font-weight: var(--font-weight-thin);
    font-weight: var(--font-weight-thin);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-highlight-text {
    color: var(--color-highlight-text);
  }
  .font-stretch-90\% {
    font-stretch: 90%;
  }
  .font-stretch-\[30\%\] {
    font-stretch: 30%;
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .accent-clickable {
    accent-color: var(--color-clickable);
  }
  .opacity-0 {
    opacity: 0%;
  }
  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-none {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .peer-checked\:bg-clickable {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-clickable);
    }
  }
  .peer-checked\:font-bold {
    &:is(:where(.peer):checked ~ *) {
      --tw-font-weight: var(--font-weight-bold);
      font-weight: var(--font-weight-bold);
    }
  }
  .peer-checked\:text-white {
    &:is(:where(.peer):checked ~ *) {
      color: var(--color-white);
    }
  }
  .odd\:bg-white {
    &:nth-child(odd) {
      background-color: var(--color-white);
    }
  }
  .even\:bg-sub-background {
    &:nth-child(even) {
      background-color: var(--color-sub-background);
    }
  }
  .hover\:text-clickable-h {
    &:hover {
      @media (hover: hover) {
        color: var(--color-clickable-h);
      }
    }
  }
  .max-sidebar-bp\:flex-col {
    @media (width < 1120px) {
      flex-direction: column;
    }
  }
  .max-xl\:flex-col {
    @media (width < 80rem) {
      flex-direction: column;
    }
  }
  .max-md\:flex-col {
    @media (width < 48rem) {
      flex-direction: column;
    }
  }
  .max-sm\:fixed {
    @media (width < 40rem) {
      position: fixed;
    }
  }
  .max-sm\:inset-0 {
    @media (width < 40rem) {
      inset: calc(var(--spacing) * 0);
    }
  }
  .max-sm\:z-10 {
    @media (width < 40rem) {
      z-index: 10;
    }
  }
  .max-sm\:mx-auto {
    @media (width < 40rem) {
      margin-inline: auto;
    }
  }
  .max-sm\:flex {
    @media (width < 40rem) {
      display: flex;
    }
  }
  .max-sm\:hidden {
    @media (width < 40rem) {
      display: none;
    }
  }
  .max-sm\:h-full {
    @media (width < 40rem) {
      height: 100%;
    }
  }
  .max-sm\:w-2\/3 {
    @media (width < 40rem) {
      width: calc(2/3 * 100%);
    }
  }
  .max-sm\:w-full {
    @media (width < 40rem) {
      width: 100%;
    }
  }
  .max-sm\:min-w-80 {
    @media (width < 40rem) {
      min-width: calc(var(--spacing) * 80);
    }
  }
  .max-sm\:flex-col {
    @media (width < 40rem) {
      flex-direction: column;
    }
  }
  .max-sm\:items-center {
    @media (width < 40rem) {
      align-items: center;
    }
  }
  .max-sm\:border-2 {
    @media (width < 40rem) {
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
  .max-sm\:bg-gray-600\/40 {
    @media (width < 40rem) {
      background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-600) 40%, transparent);
      }
    }
  }
  .max-sm\:p-5 {
    @media (width < 40rem) {
      padding: calc(var(--spacing) * 5);
    }
  }
  .max-sm\:shadow-xl {
    @media (width < 40rem) {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .max-xs\:flex-col {
    @media (width < 30rem) {
      flex-direction: column;
    }
  }
  .sidebar-bp\:w-1\/5 {
    @media (width >= 1120px) {
      width: calc(1/5 * 100%);
    }
  }
  .sidebar-bp\:flex-col {
    @media (width >= 1120px) {
      flex-direction: column;
    }
  }
  .sm\:\!block {
    @media (width >= 40rem) {
      display: block !important;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:min-w-40 {
    @media (width >= 40rem) {
      min-width: calc(var(--spacing) * 40);
    }
  }
  .sm\:grow {
    @media (width >= 40rem) {
      flex-grow: 1;
    }
  }
  .sm\:flex-col {
    @media (width >= 40rem) {
      flex-direction: column;
    }
  }
  .sm\:text-center {
    @media (width >= 40rem) {
      text-align: center;
    }
  }
  .sm\:font-extralight {
    @media (width >= 40rem) {
      --tw-font-weight: var(--font-weight-extralight);
      font-weight: var(--font-weight-extralight);
    }
  }
  .sm\:font-stretch-100\% {
    @media (width >= 40rem) {
      font-stretch: 100%;
    }
  }
  .sm\:max-md\:w-1\/2 {
    @media (width >= 40rem) {
      @media (width < 48rem) {
        width: calc(1/2 * 100%);
      }
    }
  }
  .sm\:max-md\:flex-row {
    @media (width >= 40rem) {
      @media (width < 48rem) {
        flex-direction: row;
      }
    }
  }
  .md\:my-8 {
    @media (width >= 48rem) {
      margin-block: calc(var(--spacing) * 8);
    }
  }
  .md\:my-auto {
    @media (width >= 48rem) {
      margin-block: auto;
    }
  }
  .md\:w-1\/2 {
    @media (width >= 48rem) {
      width: calc(1/2 * 100%);
    }
  }
  .md\:w-1\/3 {
    @media (width >= 48rem) {
      width: calc(1/3 * 100%);
    }
  }
  .md\:w-2\/3 {
    @media (width >= 48rem) {
      width: calc(2/3 * 100%);
    }
  }
  .md\:w-2\/5 {
    @media (width >= 48rem) {
      width: calc(2/5 * 100%);
    }
  }
  .md\:w-3\/5 {
    @media (width >= 48rem) {
      width: calc(3/5 * 100%);
    }
  }
  .md\:max-w-1\/2 {
    @media (width >= 48rem) {
      max-width: calc(1/2 * 100%);
    }
  }
  .md\:max-w-xl {
    @media (width >= 48rem) {
      max-width: var(--container-xl);
    }
  }
  .md\:text-\[8vw\] {
    @media (width >= 48rem) {
      font-size: 8vw;
    }
  }
  .xl\:w-1\/4 {
    @media (width >= 80rem) {
      width: calc(1/4 * 100%);
    }
  }
  .xl\:w-3\/4 {
    @media (width >= 80rem) {
      width: calc(3/4 * 100%);
    }
  }
  .\@max-4xl\:w-fit {
    @container (width < 56rem) {
      width: fit-content;
    }
  }
  .\@max-4xl\:max-w-\[670px\] {
    @container (width < 56rem) {
      max-width: 670px;
    }
  }
  .\@max-md\:mx-5 {
    @container (width < 28rem) {
      margin-inline: calc(var(--spacing) * 5);
    }
  }
  .\@max-md\:hidden {
    @container (width < 28rem) {
      display: none;
    }
  }
  .\@max-md\:max-h-96 {
    @container (width < 28rem) {
      max-height: calc(var(--spacing) * 96);
    }
  }
  .\@max-md\:flex-col {
    @container (width < 28rem) {
      flex-direction: column;
    }
  }
  .\@max-md\:px-9 {
    @container (width < 28rem) {
      padding-inline: calc(var(--spacing) * 9);
    }
  }
  .\@max-md\:py-4 {
    @container (width < 28rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .\@2xs\:auto-cols-fr {
    @container (width >= 18rem) {
      grid-auto-columns: minmax(0, 1fr);
    }
  }
  .\@2xs\:grid-flow-col {
    @container (width >= 18rem) {
      grid-auto-flow: column;
    }
  }
  .\@2xs\:grid-cols-1 {
    @container (width >= 18rem) {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }
  .\@2xs\:grid-cols-2 {
    @container (width >= 18rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .\@2xs\:grid-cols-3 {
    @container (width >= 18rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .\@2xs\:grid-cols-4 {
    @container (width >= 18rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .\@2xs\:grid-rows-2 {
    @container (width >= 18rem) {
      grid-template-rows: repeat(2, minmax(0, 1fr));
    }
  }
  .\@md\:mr-4 {
    @container (width >= 28rem) {
      margin-right: calc(var(--spacing) * 4);
    }
  }
  .\@md\:hidden {
    @container (width >= 28rem) {
      display: none;
    }
  }
  .\@md\:max-h-90 {
    @container (width >= 28rem) {
      max-height: calc(var(--spacing) * 90);
    }
  }
  .\@md\:w-1\/2 {
    @container (width >= 28rem) {
      width: calc(1/2 * 100%);
    }
  }
  .\@md\:w-full {
    @container (width >= 28rem) {
      width: 100%;
    }
  }
  .\@md\:grid-cols-2 {
    @container (width >= 28rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .\@md\:p-3 {
    @container (width >= 28rem) {
      padding: calc(var(--spacing) * 3);
    }
  }
  .\@md\:text-right {
    @container (width >= 28rem) {
      text-align: right;
    }
  }
  .\@md\:text-sm {
    @container (width >= 28rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .\@md\:text-xl {
    @container (width >= 28rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .\@md\:\@max-4xl\:order-last {
    @container (width >= 28rem) {
      @container (width < 56rem) {
        order: 9999;
      }
    }
  }
  .\@md\:\@max-4xl\:px-3 {
    @container (width >= 28rem) {
      @container (width < 56rem) {
        padding-inline: calc(var(--spacing) * 3);
      }
    }
  }
  .\@md\:\@max-4xl\:px-5 {
    @container (width >= 28rem) {
      @container (width < 56rem) {
        padding-inline: calc(var(--spacing) * 5);
      }
    }
  }
  .\@4xl\:w-1\/4 {
    @container (width >= 56rem) {
      width: calc(1/4 * 100%);
    }
  }
  .\@4xl\:w-1\/5 {
    @container (width >= 56rem) {
      width: calc(1/5 * 100%);
    }
  }
  .\@4xl\:w-\[55\%\] {
    @container (width >= 56rem) {
      width: 55%;
    }
  }
}
@font-face {
  font-family: "LeagueMono";
  src: url("LeagueMono/LeagueMono.ttf"),;
}
@layer base {
  h1 {
    margin-bottom: calc(var(--spacing) * 4);
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  h2 {
    margin-bottom: calc(var(--spacing) * 2);
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .helptext {
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 1);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .errorlist {
    color: var(--color-red-700);
  }
  label.required:before {
    content: "*";
    color: var(--color-highlight-item);
  }
}
@layer components {
  .link {
    cursor: pointer;
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-clickable);
    &:hover {
      @media (hover: hover) {
        color: var(--color-clickable-h);
      }
    }
  }
  .btn {
    margin: calc(var(--spacing) * 0.5);
    height: fit-content;
    width: fit-content;
    cursor: pointer;
    background-color: var(--color-clickable);
    padding: calc(var(--spacing) * 2);
    text-align: center;
    color: var(--color-white);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-clickable-h);
      }
    }
  }
  .textinput {
    margin: calc(var(--spacing) * 0.5);
    resize: none;
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: var(--color-white);
    padding: calc(var(--spacing) * 1);
  }
  .textinput-wrapper > input {
    margin: calc(var(--spacing) * 0.5);
    width: 100%;
    resize: none;
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: var(--color-white);
    padding: calc(var(--spacing) * 1);
  }
  .fieldgroup {
    margin-inline: calc(var(--spacing) * 3);
    margin-block: calc(var(--spacing) * 1);
    background-color: var(--color-sub-background);
    padding: calc(var(--spacing) * 2);
  }
  .banner {
    margin-inline: auto;
    margin-block: calc(var(--spacing) * 1);
    width: calc(11/12 * 100%);
    background-color: var(--color-highlight-item-light);
    padding-block: calc(var(--spacing) * 2);
    text-align: center;
  }
  .menuitem {
    cursor: pointer;
    padding: calc(var(--spacing) * 1);
    &:nth-child(even) {
      background-color: var(--color-sub-background);
    }
  }
  .popup-menu {
    z-index: 50;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-highlight-item);
    background-color: var(--color-background);
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .clickable-svg {
    cursor: pointer;
    color: var(--color-clickable);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sub-background);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-clickable-h);
      }
    }
  }
  .select-wrapper {
    z-index: 0;
    display: grid;
    width: 100%;
    align-items: center;
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: var(--color-white);
    padding-right: calc(var(--spacing) * 2);
    grid-template-areas: "select";
  }
  .select-wrapper::after {
    height: calc(var(--spacing) * 2);
    width: calc(var(--spacing) * 3);
    justify-self: flex-end;
    background-color: var(--color-clickable);
    content: "";
    grid-area: select;
    clip-path: polygon(100% 0%, 0 0%, 50% 100%);
  }
  .select-wrapper > select {
    z-index: 10;
    margin: calc(var(--spacing) * 1);
    height: 100%;
    width: 100%;
    cursor: pointer;
    appearance: none;
    background-color: transparent;
    --tw-outline-style: none;
    outline-style: none;
    grid-area: select;
  }
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
